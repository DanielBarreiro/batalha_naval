#include <stdio.h>
#include <stdlib.h>

#define MAX 80

typedef struct
{

    char nome[MAX];
    int rank;

} ranking;

void quick_sort(ranking arr[],int low,int high)
{
    ranking temp;
    int pivot,j,i;
    if(low<high)
    {
        pivot = low;
        i = low;
        j = high;

        while(i<j)
        {
            while((arr[i].rank<=arr[pivot].rank)&&(i<high))
            {
                i++;
            }

            while(arr[j].rank>arr[pivot].rank)
            {
                j--;
            }

            if(i<j)
            {
                temp=arr[i];
                arr[i]=arr[j];
                arr[j]=temp;
            }
        }

        temp=arr[pivot];
        arr[pivot]=arr[j];
        arr[j]=temp;
        quick_sort(arr,low,j-1);
        quick_sort(arr,j+1,high);
    }
}


int main()
{

    ranking score[10], score2[10];
    int cont,ch,n2=0;
    FILE *ficheiro;

    ficheiro= fopen("teste.txt","w+");

    if(ficheiro==NULL)
    {
        ficheiro=fopen("teste.txt","w+");
        fclose(ficheiro);
        ficheiro=fopen("teste.txt","r+");
    }
    fseek(ficheiro,0,SEEK_END);
    for(cont=0; cont<10; cont++)
    {
        printf("Insira a frase\n");
        gets(score[cont].nome);
        printf("Insira o numero\n");
        scanf("%d",&score[cont].rank);
        fprintf(ficheiro,"%s  %d\n",score[cont].nome,score[cont].rank);
        fflush(stdin);
    }
    rewind(ficheiro);
    while(ch!=EOF)
    {
        fscanf(ficheiro,"%s%d",score2[n2].nome,&score2[n2].rank);
        fflush(stdin);
        if(n2<10)
        {
            printf("Nome:%s Score:%d \n",score2[n2].nome,score[n2].rank);
            n2++;
        }
        ch=getc(ficheiro);
    }
    printf("\n");
    quick_sort(score2,0,9);

    for(n2=0; n2<10; n2++)
    {
        printf("nome= %s  score= %d\n",score2[n2].nome,score2[n2].rank);
    }
    n2=0;
    rewind(ficheiro);
    printf("Lista ordenada\n");
    fclose(ficheiro);




    return 0;
}
